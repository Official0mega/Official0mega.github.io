{"id":1208,"date":"2022-11-03T09:11:09","date_gmt":"2022-11-03T09:11:09","guid":{"rendered":"https:\/\/blog-dev.sololearn.com\/2022\/11\/03\/what-is-node-js-an-essential-tool-for-javascript-coders\/"},"modified":"2023-03-07T15:14:56","modified_gmt":"2023-03-07T15:14:56","slug":"what-is-node-js","status":"publish","type":"post","link":"https:\/\/www.sololearn.com\/blog\/what-is-node-js\/","title":{"rendered":"What is Node.js? An Essential Tool for JavaScript Coders"},"content":{"rendered":"\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">So why should I learn Node.JS?<\/span><\/h2>\n\n\n\n<p><span style=\"font-weight: 400;\">JavaScript is starting to dominate the world of <a href=\"https:\/\/www.sololearn.com\/blog\/best-programming-languages\/\" data-type=\"post\" data-id=\"1795\">programming languages<\/a>, so if you\u2019re in the world of IT, it\u2019s important to pay attention. More and more companies need to hire JavaScript developers and if you know Node.js well, you\u2019re almost guarantee a good career.<\/span><\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">But what is Node.JS is?&nbsp;<\/span><\/h3>\n\n\n\n<p><span style=\"font-weight: 400;\">In this guide we\u2019ll explore everything from how it works, to its rich features, and its advantages. We\u2019ll also share what you can do with Node.JS and how you can get started with it.<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">But first, what are some of its benefits? And why is it so popular?<\/span><\/p>\n\n\n\n<ul>\n<li><span style=\"font-weight: 400;\">It&#8217;s free to use, accessible, and open source.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Node.JS is a complete full-stack approach that utilizes a single language (JavaScript).<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Has a ton of practical applications and uses.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Huge community and support.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Cross-Platform support.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">There is a huge demand for Node.js in the market.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Node.JS is a good choice for microservices development.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">A popular and diverse set of tools and frameworks<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Node.JS is speed-oriented and less resource-consuming, making it optimal for real-time applications.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Relatively low learning curve (Node.JS is not a new programming language. Yet it uses an existing, popular language (JS) to offer better usability).<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">It provides scalability to applications.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">It comes with thousands of easy-to-use modules.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Web apps are just a part of the Node.js ecosystem. You can also use it for native desktop and mobile apps. Often you can do it all using the same codebase.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Wider industrial recognition and support by multinational companies.<\/span><\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">Let\u2019s recap JavaScript again<\/span><\/h2>\n\n\n\n<p><span style=\"font-weight: 400;\">What is the role of Javascript in web development? <a href=\"https:\/\/www.sololearn.com\/blog\/what-is-javascript-used-for\/\" data-type=\"post\" data-id=\"1791\">JavaScript <\/a>(JS) is one of the most popular programming languages for web development. Much of the web is built on <a href=\"https:\/\/www.sololearn.com\/compiler-playground\/web\">HTML, CSS, and JS.<\/a><\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">JavaScript is well-known as the scripting language for web pages. That\u2019s why you can simply write javascript code in an HTML file and view the output in a browser.&nbsp; It displays and manipulates user interfaces for end-users. JavaScript is a high-level, interpreted, and object-oriented programming language.&nbsp;<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">First-class functions are one of the special features of JavaScript. It means you can treat functions as variables. Again, that means you can assign functions to other variables. You can also pass functions as arguments to other functions. Let\u2019s see an example here.&nbsp;<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">Example 1 &#8211; Assign function to a variable<\/span><\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">const msg = function() {\n\n\t\tconsole.log(\"Hello World\");\n\n\t\tdisplayPi() \/\/ 3.14159...<\/pre>\n\n\n\n<p><\/p>\n\n\n\n<p><i><span style=\"font-weight: 400;\">\/\/you can call the function using the variable name<\/span><\/i> <\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">msg();<\/pre>\n\n\n\n<p><span style=\"font-weight: 400;\">Example 2 &#8211; pass function as an argument<\/span><\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">function greet() {\n\n\treturn \"Hello \";\n\n}\n\nfunction saySomething(greetWord, name) {\n\n\tconsole.log(greetWord() + name);\n\n}\n\n\/\/ Pass greet function as an argument to saySomething function\n\nsaySomething(greet, \"Mike\");<\/pre>\n\n\n\n<p><span style=\"font-weight: 400;\">Do you know that Web browsers have dedicated JavaScript engines? These are used to execute the code on user devices. Some examples are<\/span><\/p>\n\n\n\n<ul>\n<li><span style=\"font-weight: 400;\">Mozilla\u2019s SpiderMonkey is used in Netscape and later in Firefox.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Google&#8217;s V8 is used in Google Chrome and other Chromium-based browsers.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Microsoft&#8217;s Chakra is used in Internet Explorer and the original Edge browser.<\/span><\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">From JS to Node.JS<\/span><\/h2>\n\n\n\n<p><span style=\"font-weight: 400;\">JavaScript engines were developed to be used only in web browsers. Yet, a fantastic turn of events changed the future of JavaScript. In 2009, Ryan Dahl invented the NodeJS project.<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">NodeJS is an open-source, cross-platform JavaScript runtime environment. It runs on Google&#8217;s V8 JavaScript engine (the JavaScript engine used by Chrome).<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">There is a notable difference between traditional JavaScript and NodeJS. NodeJS executes JavaScript code without the need for a web browser. NodeJS is basically a <a href=\"https:\/\/www.sololearn.com\/blog\/what-is-c-plus-plus-used-for\/\" data-type=\"post\" data-id=\"1242\">C++<\/a> wrapper built over the V8 engine. It can run as a cross-platform runtime environment without a browser. A runtime environment is a hardware or software environment that executes a code.<\/span><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">Difference between JS and NodeJS<\/span><\/h2>\n\n\n\n<ul>\n<li><span style=\"font-weight: 400;\">JavaScript is a programming language that can be used to write JS code. In contrast, Node.JS is not a programming language but a JS runtime environment.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">JavaScript was originally intended to be used on a web browser. The web browser compiles the JS code to machine code. Yet, Node.JS eliminates the need for a web browser to run <a href=\"https:\/\/www.sololearn.com\/blog\/10-basics-of-javascript\/\" data-type=\"post\" data-id=\"2000\">JavaScript code<\/a>.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">JavaScript was initially used for front-end web development. It can access and manipulate the DOM. Node.JS doesn&#8217;t necessarily do so. It can run both server-side scripting and client-side code.<\/span><\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">Exploring NodeJS<\/span><\/h2>\n\n\n\n<p><span style=\"font-weight: 400;\">Node.js is an open-source, cross-platform runtime environment. It uses event-driven, non-blocking Input\/output(I\/O) architecture. Non-blocking I\/O means it doesn&#8217;t wait until&nbsp; IO devices finish their job. Usually, I\/O devices take time to perform their operations. But NodeJS lets the system perform the operation and go to the next line of code. This makes Nodejs an excellent choice for developing fast and scalable real-time applications. The following code shows an example of non-blocking(Asynchronous) nature of Nodejs.<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">The following code opens the file and reads it and prints the content of the file in the console log. It also calculates the total of 1 to 5.&nbsp;<\/span><\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">const fs = require('fs');\n\nconst filepath = myfile.txt ';\n\nfs.readFile(filepath, (err, data) => {\n\n\tconsole.log(data);\n\n});\n\nlet total = 0;\n\nfor (let i = 1; i &lt;= 5; i++) {\n\n\ttotal = total + i;\n\n}\n\nconsole.log(Total: ', total);<\/pre>\n\n\n\n<p><span style=\"font-weight: 400;\">In a normal code, the program will read the complete file and print its content first. And then do the for loop and print the total. However, reading files takes time. So in this non-blocking code, you will see the output of the total before writing the content of the file. Because Nodejs don\u2019t wait until file reading operating ends. It goes to the next code to be executed.&nbsp;<\/span><\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">What should you know about Node.js Architecture?<\/span><\/h3>\n\n\n\n<p><span style=\"font-weight: 400;\">Node.js uses the &#8220;Single-threaded event loop&#8221; architecture. Therefore, when Nodejs receives multiple requests, it puts them in EventQueue. An event loop is an event listener that waits and listens to EventQueue until it hears an event.<\/span><\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">How Node.JS works in a real-world application<\/span><\/h3>\n\n\n\n<ul>\n<li><span style=\"font-weight: 400;\">It keeps a small number of threads in a limited thread pool. Whenever a request has been made, it will be put in a queue. The single-threaded event loop awaits and picks requests from the queue.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Then the request is processed and checked to see if it needs an I\/O blocking operation. If not, it&#8217;ll be processed, and a response will be sent.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">If the request requires I\/O blocking, the event loop will assign a thread. This thread is taken from the limited internal pool I said above.<\/span><\/li>\n<\/ul>\n\n\n\n<p><span style=\"font-weight: 400;\">Node.JS is non-blocking. The event loop actively implements this non-blocking nature. It tracks the I\/O blocking requests and keeps them in the queue until the I\/O blocking task is processed. Thus, the processing of other requests can continue uninterruptedly.<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">The use of fewer threads results in less resource and memory usage. It will ultimately result in faster execution. It makes Node.JS an ideal choice for building real-time apps.<\/span><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">What are the main features of Node.js<\/span><\/h2>\n\n\n\n<ul>\n<li><span style=\"font-weight: 400;\">Easier to get started. It has a minimal setup process and tons of tools, along with a large and supportive community. Moreover, it is easy to access with the availability of useful guides.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Scalable<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Better performance and speed, with non-blocking threads and less resource usage.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Cross-platform support with the ability to use the same codebase for multiple OS<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Better reusability and maintainability. Both the server-side and client-side use the same language.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Third-party libraries\/packages. Thousands of third-party open-source packages are accessible via NPM (node package manager).<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Native support for operating systems. Node.JS is written in C\/C++ as most OSs are written in C\/C++ (Java is also based on C\/C++). It adds support for OS-level features like networking.<\/span><\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">What is NodeJS used for?<\/span><\/h2>\n\n\n\n<p><span style=\"font-weight: 400;\">It won&#8217;t be easy to answer what Node.JS is used for. It has many practical applications with its capabilities and third-party libraries\/packages. Let us discuss some of them.<\/span><\/p>\n\n\n\n<ul>\n<li><span style=\"font-weight: 400;\">Node.js has a native streaming <a href=\"https:\/\/www.sololearn.com\/blog\/what-is-an-api\/\" data-type=\"post\" data-id=\"1798\">API<\/a>. It provides lightness, speed, and low resources.\u00a0 Streaming service components use this feature.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Complex PWA (Progressive Web Applications) and\/or SPA (Single Page Applications).<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Applications based on the REST API.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">A proxy-server.<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Application monitoring tools<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Web applications<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Desktop applications (ex: VSCode was built using ElectronJS and NodeJS).<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Massive data collection and processing<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Fintech solutions (ex: PayPal)<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">Social networking (ex: LinkedIn)<\/span><\/li>\n\n\n\n<li><span style=\"font-weight: 400;\">IoT solutions.<\/span><\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span style=\"font-weight: 400;\">Getting started with Node.JS<\/span><\/h2>\n\n\n\n<p><span style=\"font-weight: 400;\">After going through the above facts, you may feel that it&#8217;d be overwhelming to learn and start a Node.JS project. However, it&#8217;s really not. You are good to go if you have a good grasp of vanilla JavaScript (ECMAScript).<\/span><\/p>\n\n\n\n<p><span style=\"font-weight: 400;\">The first step is to install Node.JS on your system. Simply go to<\/span><a href=\"https:\/\/nodejs.org\/en\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\"> www.nodejs.org<\/span><\/a><span style=\"font-weight: 400;\"> and download the appropriate installer for your OS.<\/span><\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"479\" src=\"https:\/\/blog-dev.sololearn.com\/wp-content\/uploads\/2022\/11\/nodejs1-2-1024x479.png\" alt=\"\" class=\"wp-image-1601\" srcset=\"https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/nodejs1-2-1024x479.png 1024w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/nodejs1-2-300x140.png 300w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/nodejs1-2-768x360.png 768w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/nodejs1-2-1536x719.png 1536w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/nodejs1-2.png 1600w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>If you cannot see the correct option, go to<a href=\"https:\/\/nodejs.org\/en\/download\/\" target=\"_blank\" rel=\"noopener\"> Downloads<\/a>. Then download the correct package and install it.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"1024\" height=\"479\" src=\"https:\/\/blog-dev.sololearn.com\/wp-content\/uploads\/2022\/11\/unnamed-3-2-1024x479.png\" alt=\"\" class=\"wp-image-1602\" srcset=\"https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/unnamed-3-2-1024x479.png 1024w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/unnamed-3-2-300x140.png 300w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/unnamed-3-2-768x359.png 768w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/unnamed-3-2-1536x718.png 1536w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/unnamed-3-2.png 1600w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>Once the installation process is over, open up a terminal. This can be Windows CMD, Powershell, or Terminal on Mac. Run the following command and see if the Node.js installation is successful.&nbsp;<\/p>\n\n\n\n<p><em>node -v<\/em><\/p>\n\n\n\n<p>It should output something like the below.<\/p>\n\n\n\n<p><em>V16.15.1&nbsp;<\/em><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Building a Simple Web App with Node.JS<\/h2>\n\n\n\n<p>After installing Node.JS, we can try creating a simple server app with a message. <a href=\"https:\/\/www.sololearn.com\/blog\/best-ides-for-programming\/\" data-type=\"post\" data-id=\"2373\">Open up a new file in your IDE<\/a> (or any text editor).<\/p>\n\n\n\n<p>My file is named <strong>my-app.js<\/strong> in this example. Write the following code there.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh4.googleusercontent.com\/A4YVJQKZi4tWPyOrVijV7Li_oC-YmrDeQq7xYOZphYIxQI5uHVaYH2sQ3JhABRc0ljR6mf1K64_MkXdFAE2kvpduGWTM4Q5CCBG-NQ4vo-culRgTqX2sq5ip8IqnvAN19ZjJQCDDVo7bwiXrcum1NxSDnZQsf-_MjkUQLWiUoErwNdW5nCzMMDUGTEs_\" alt=\"\"\/><\/figure>\n\n\n\n<p>In your terminal, go to the directory you\u2019re in, and then run<\/p>\n\n\n\n<p>node my-app.js&nbsp;<\/p>\n\n\n\n<p>You\u2019d see the following as the output.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh4.googleusercontent.com\/n1GSMiAV-BEDdCYah0-BCJiaLT8_1JNYXnzKgIyXTBrDH90Is-4VZnO8ns0ULmvp2ENWsdoAAptCiHeGjI0pAy9s-xJfasmOEAJQ6lNjCx5IUN39m3qciP4_Mv0aGtDdpbwmmD4834Do_19JEtb-juneMSewrSMOJrIqLVa1qaNn9vBuYX_r6yEl-8Mb\" alt=\"\"\/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">What is NPM in Node.JS<\/h2>\n\n\n\n<p>What is NPM in Node.JS, you might ask? Well, NPM, which stands for Node Package Manager, mainly consists of two things.<\/p>\n\n\n\n<ul>\n<li>An online repository for thousands of open-source Node.JS packages. Searchable on<a href=\"https:\/\/www.npmjs.com\/\" target=\"_blank\" rel=\"noopener\"> https:\/\/www.npmjs.com\/<\/a><\/li>\n<\/ul>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh3.googleusercontent.com\/uAZ3FNytlcKayTtoPu8k2nCDZHCODRmtt3RSEUelRC7NJRFaOP3U4dks8LG2QcvTEwc6GPrWvcJBMjV7YoEvoIp2JL1iVlE15MLa1-Ecq8LgV33jVxO-4vh4usoXarksKITyYyFegs45lu8r0EjYF0_L-JjoncwtngOxlrGlmqy7gOYEbRLAfaFGcqhg\" alt=\"\"\/><\/figure>\n\n\n\n<ul>\n<li>A command-line utility for installing and managing versions\/dependencies from the above-mentioned packages.<\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Installing a Package module<\/h2>\n\n\n\n<p>NPM will be automatically installed when you&#8217;re running Node Installer. It can be used in any of your Node.js projects. NPM is very convenient to use. You can search for the package you want on npmjs. It will provide instructions on installing the package. It&#8217;s usually a concise, one-line command that you can simply copy and paste into your terminal.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh4.googleusercontent.com\/oAcvEBIxBwKVOtE2zMpXYe_rUz_lRaBQr0E5JsNCPiBAgSsl74vVhXXzQaIcWoGuTcIq5XtS7fTnze_SjzGtW1VFh_cZ6rM4o9Oww-e_PavtdFWTRyrJ9ApA_KL1K7h_y4DfOIkY6_wdiLRTurwwlPp7ZhmMtPFiafJEOnjh-qZKFE4hbBFsxWNNTgTJ\" alt=\"\"\/><\/figure>\n\n\n\n<p>Then the specified package will be installed in your current directory. You can find it under the .node_modules. After installation, you can use that package in your application.<\/p>\n\n\n\n<p>For example, if you want to use Axios in your application, you can write the following code line.<br>const axios = require(&#8216;axios&#8217;);<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Global Install vs. Local Install<\/h2>\n\n\n\n<p>Earlier, we simply installed the package module directly into the working directory. So it&#8217;s only accessible on that particular project. There is another method for installing the package module globally. It will allow us to use that package module in any application we build.<\/p>\n\n\n\n<p>As in the previous method, we can use npm install to accomplish this global installation. Yet, we have to pass an additional parameter ( -g ).<br>npm install coffee-script -g<\/p>\n\n\n\n<p><br>This command will install the package on your system and create a symlink to make it available. As per the above example, running <strong>coffee<\/strong> in any directory would now be possible. You will also have access to the CoffeeScript REPL anywhere in your system.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Dependency Management with NPM<\/h2>\n\n\n\n<p>When you get a Node project developed by someone else, you&#8217;ll get it with a file named package.json. It&#8217;ll contain information on all the node modules used by the project. You can run npm install inside the project root to install all the node modules required for the project.<\/p>\n\n\n\n<p>This approach will make it much easier to distribute or clone from a repo. You&#8217;ll get only the important project files directly. Then you can install all the dependencies separately (or choose what to install).<\/p>\n\n\n\n<p>And you\u2019re done!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>So why should I learn Node.JS? JavaScript is starting to dominate the world of programming languages, so if you\u2019re in the world of IT, it\u2019s important to pay attention. More and more companies need to hire JavaScript developers and if you know Node.js well, you\u2019re almost guarantee a good career. But what is Node.JS is?&nbsp; <a href=\"https:\/\/www.sololearn.com\/blog\/what-is-node-js\/\" class=\"more-link\">&#8230;<span class=\"screen-reader-text\">  What is Node.js? An Essential Tool for JavaScript Coders<\/span><\/a><\/p>\n","protected":false},"author":3,"featured_media":2091,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[35,32],"tags":[21,41,42],"_links":{"self":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1208"}],"collection":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/comments?post=1208"}],"version-history":[{"count":5,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1208\/revisions"}],"predecessor-version":[{"id":2493,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1208\/revisions\/2493"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media\/2091"}],"wp:attachment":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media?parent=1208"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/categories?post=1208"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/tags?post=1208"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}