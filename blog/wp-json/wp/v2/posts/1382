{"id":1382,"date":"2021-11-03T09:15:00","date_gmt":"2021-11-03T09:15:00","guid":{"rendered":"https:\/\/blog-dev.sololearn.com\/2022\/11\/03\/what-is-dart\/"},"modified":"2023-02-23T16:07:48","modified_gmt":"2023-02-23T16:07:48","slug":"what-is-dart","status":"publish","type":"post","link":"https:\/\/www.sololearn.com\/blog\/what-is-dart\/","title":{"rendered":"What is Dart?"},"content":{"rendered":"<p><span style=\"font-weight: 400;\">The marquee name in modern programming is <\/span><a href=\"https:\/\/www.sololearn.com\/learning\/1024\"><span style=\"font-weight: 400;\">JavaScript<\/span><\/a><span style=\"font-weight: 400;\">, backed by the numbers and the widespread chatter about the language in developer communities. For the past decade, as the language continues to evolve and new use cases emerge by the month, a number of competing languages have been touted as \u201cthe next big thing\u201d to challenge <\/span><a href=\"https:\/\/www.javascript.com\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">JavaScript\u2019s<\/span><\/a><span style=\"font-weight: 400;\"> dominance. Many have come and gone, but then there\u2019s the interesting case of <\/span><a href=\"https:\/\/dart.dev\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">Dart<\/span><\/a><span style=\"font-weight: 400;\">.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Launched by Google as their star-studded competitor to JavaScript, Dart suffered through a tumultuous half decade as the language failed to win over the legions of programmers Google had envisioned. While other languages in similar situations have faded, interestingly enough Dart has experienced a renaissance over the past few years. But why? What is Dart, and why has it started to win over a loyal following now?<\/span><\/p>\n<p><span style=\"font-weight: 400;\">The short answer is the emergence of <\/span><a href=\"https:\/\/flutter.dev\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">Flutter<\/span><\/a><span style=\"font-weight: 400;\">, Google\u2019s UI framework for building native interfaces in iOS and Android. Powered by the Dart platform, Some developers like to compare Dart to <\/span><a href=\"https:\/\/www.sololearn.com\/Course\/Swift\/\"><span style=\"font-weight: 400;\">Swift<\/span><\/a><span style=\"font-weight: 400;\">, Apple\u2019s latest programming language, which has its own legions of programming followers (largely thanks to the continued massive demand from iPhone users for more apps and features). But to understand why Dart is becoming a hot name in programming again, let\u2019s take a deeper dive into the basics of the language and how it is proving itself as a potential alternative to other Android and iOS solutions.<\/span><\/p>\n<p><img decoding=\"async\" src=\"https:\/\/api.sololearn.com\/Uploads\/What_is_Dart__blog_02.jpg\" alt=\"&quot;What\"><\/p>\n<h2><strong>Why Has Dart Seen A Surge In Adoption?&nbsp;<\/strong><\/h2>\n<p><span style=\"font-weight: 400;\">After a few years languishing behind more popular languages, the roll-out of Dart 2.0 changed the fortunes of the language. The new edition of Dart featured improvements to client-side development, such as strong typing and the \u201cUI as code\u201d approach (which essentially eliminates the need for context-switching, allowing developers to avoid constantly flipping between the programming language and a separate UI markup language).<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In contrast to some competing languages, Dart was designed with the idea of making the development process as comfortable and fast as possible for developers (which is more common among newer languages than some of the old names in the industry). Specifically, Dart includes a pretty extensive set of built-in tools like a native package manager, a variety of compilers \/ transpilers, a parser and formatter. Once you enter production, the code can be compiled in native language, which removes the need for a special environment to actually operate. For web development, Dart is transpiled directly into JavaScript.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">While this suite of features and benefits by itself didn\u2019t lead to a truly JavaScript-challenging breakthrough, the emergence of the Flutter framework is equally responsible for reinvigorating the future for Dart. Flutter is simple to program in, and any overworked developer generally likes the idea of being able to develop cross-platform while using a single code-base. Flutter\/Dart also supports IDEs such as Visual Studio Code, Android Studio, and Intellij Idea, making development even easier.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In addition to the benefits of using Flutter, Dart also includes various compilation types. On mobile devices for example, it needs to compile code Ahead-of-Time (AOT), which gives fast execution and low start-up time. However, for development it also compiles in Just-in-Time (JIT). This offers developers a one-two punch that is hard to resist, since purely AOT compilation makes development slower. On top of that, Dart also includes a third compile option (compile to JavaScript), which makes it possible to share code across mobile and web applications.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">In a nutshell, Dart offers the suite of benefits that have driven most of the popular modern programming languages &#8211; a variety of use cases, a focus on removing annoying processes and structural designs that slow down programming, and the ability to code in one place for applications that function on a variety of platforms.<\/span><\/p>\n<h2><strong>Why Is Flutter So Important To The Success Of Dart?&nbsp;<\/strong><\/h2>\n<p><span style=\"font-weight: 400;\">Because Flutter is built on top of the Dart platform, the two are interchangeable. However, like any UI framework, Flutter\u2019s design is geared toward getting the most from the Dart base language, as well as easing the programming process for developers.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">For example, Dart allows Flutter to update the display at 60 or even 120 frames per second (with the appropriate hardware), the kind of frame rates usually associated with games. This is because Flutter functions with a similar architecture style to React Native, with the difference being that compiled Dart code deals directly with pixels. This is done through its own native widgets, as opposed to those supplied in iOS or Android.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Flutter Widgets are unchangeable, and only exist until they need to be changed, which leads to a new tree of widgets being created. Because of this structural feature, Flutter is able to operate at high frame rates consistently, while employing Dart\u2019s fast garbage collection abilities to make that happen.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">While <\/span><a href=\"https:\/\/www.sololearn.com\/\"><span style=\"font-weight: 400;\">newer programmers<\/span><\/a><span style=\"font-weight: 400;\"> who are just beginning to <\/span><a href=\"https:\/\/www.sololearn.com\/Courses\/\"><span style=\"font-weight: 400;\">learn to code<\/span><\/a><span style=\"font-weight: 400;\"> or build for iOS and Android may find Flutter more complicated to use than other competing frameworks, mastering the abilities of Dart and Flutter can allow you to unlock a ton of potential in both the base language and the framework. This leads the combination of the two to be an ideal choice for developing mobile apps, games, web applications, and a wide variety of broader use cases.<\/span><\/p>\n<h2><strong>How Can I Use Dart?&nbsp;<\/strong><\/h2>\n<p><span style=\"font-weight: 400;\">Like most general-purpose languages, Dart is able to be used for a wide variety of programming needs. The versatility of the language is especially important as newer tech innovations like AI, machine learning, data science, and the Internet of Things have led to previously unexpected demands for languages with a variety of uses. Here are some specific ways that Dart can be employed by programmers:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">When working with web applications, using the art library: html and the transpiler to transform the Dart code into JavaScript, or using frameworks like AngularDart.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">For server-side development, using the art: http and art: io libraries. There are also several frameworks that can be used, such as Aqueduct.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">In console applications for a wide variety of needs.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">In mobile applications, thanks to Flutter &#8212; with the growing emergence for dynamic mobile apps, this is one of the primary drivers of the language\u2019s adoption among modern programmers.<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">Beyond these use cases, there are also some practical reasons to consider using Dart for your programming needs:<\/span><\/p>\n<p><strong>Open Sourcing<\/strong><\/p>\n<p><span style=\"font-weight: 400;\">Every experienced developer loves a language that embraces open-sourcing, and Dart fits the bill. This allows developers to report bugs (or fix them yourself), avoid worrying about licensing issues, liability issues (being sued for using proprietary software), or the need to pay an external company to use it.<\/span><\/p>\n<p><strong>Ease-Of-Use<\/strong><\/p>\n<p><span style=\"font-weight: 400;\">While Flutter offers some complications and a steeper learning curve, the Dart language itself is relatively easy to learn for newer programmers. The syntax is clean and simple, and is especially easy to learn for developers with background in <\/span><a href=\"https:\/\/www.sololearn.com\/learning\/1089\"><span style=\"font-weight: 400;\">C<\/span><\/a><span style=\"font-weight: 400;\">, <\/span><a href=\"https:\/\/www.sololearn.com\/Course\/Java\/\"><span style=\"font-weight: 400;\">Java<\/span><\/a><span style=\"font-weight: 400;\">, or <\/span><a href=\"https:\/\/docs.microsoft.com\/en-us\/dotnet\/csharp\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">C#<\/span><\/a><span style=\"font-weight: 400;\">.<\/span><\/p>\n<p><strong>Easy To Learn<\/strong><\/p>\n<p><span style=\"font-weight: 400;\">In addition to the note above, the Dart team also offers a helpful tutorial and introduction for beginners, as well as solid documentation to support it. This fits with Google\u2019s goal of making Dart a more accessible language than the competition.<\/span><\/p>\n<p><strong>Good Tool Support<\/strong><\/p>\n<p><span style=\"font-weight: 400;\">Almost every major Text Editor and IDE offers robust support for the Dart language. This includes heavy IDEs like Webstorm, IntelliJ IDEA, and Android Studio, or even simple editors like VS Code, Sublime text, VIM, Emacs, Atom, etc. This lets programmers choose whatever editor they are most comfortable with when using it.<\/span><\/p>\n<p><strong>Productivity Is Easier<\/strong><\/p>\n<p><span style=\"font-weight: 400;\">Because of the clean and logical syntax, the Dart language is productive. Additionally, the built-in support for strong type checking makes it a very useful language for large projects with a big team of developers, where anything that streamlines the programming process is welcome. Because Dart also has a large collection of libraries and frameworks packed with it, programmers also don\u2019t need to build everything from scratch, saving further time and effort.<\/span><\/p>\n","protected":false},"excerpt":{"rendered":"<p>The marquee name in modern programming is JavaScript, backed by the numbers and the widespread chatter about the language in developer communities. For the past decade, as the language continues to evolve and new use cases emerge by the month, a number of competing languages have been touted as \u201cthe next big thing\u201d to challenge <a href=\"https:\/\/www.sololearn.com\/blog\/what-is-dart\/\" class=\"more-link\">&#8230;<span class=\"screen-reader-text\">  What is Dart?<\/span><\/a><\/p>\n","protected":false},"author":7,"featured_media":1381,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[35],"tags":[22],"_links":{"self":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1382"}],"collection":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/users\/7"}],"replies":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/comments?post=1382"}],"version-history":[{"count":2,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1382\/revisions"}],"predecessor-version":[{"id":2334,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1382\/revisions\/2334"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media\/1381"}],"wp:attachment":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media?parent=1382"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/categories?post=1382"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/tags?post=1382"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}