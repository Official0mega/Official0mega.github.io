{"id":1720,"date":"2022-11-17T11:55:15","date_gmt":"2022-11-17T11:55:15","guid":{"rendered":"https:\/\/blog-dev.sololearn.com\/?p=1720"},"modified":"2023-03-07T14:53:03","modified_gmt":"2023-03-07T14:53:03","slug":"react-components","status":"publish","type":"post","link":"https:\/\/www.sololearn.com\/blog\/react-components\/","title":{"rendered":"React components: what are they, what are they for, and how to use them?"},"content":{"rendered":"\n<p>A component is to <a href=\"https:\/\/www.sololearn.com\/blog\/what-is-reactjs\/\" data-type=\"post\" data-id=\"1206\">Reactjs <\/a>what battery is to a laptop. React is all about components. So, if you want to learn React in the nearest future, be aware that you\u2019ll be writing a lot of components. And if you are already making web applications with React, then you are writing a lot of components.<\/p>\n\n\n\n<p>In this article, you\u2019ll learn what React components are in a way you can understand. You will learn:<\/p>\n\n\n\n<ul>\n<li>what components are in relation to states<\/li>\n\n\n\n<li>functional and class-based components in ReactJS<\/li>\n\n\n\n<li>how to render a component in ReactJS&nbsp;<\/li>\n\n\n\n<li>and how to pass arguments into components in ReactJS in form of props (properties).<\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">What is a Component in React?<\/h2>\n\n\n\n<p>Components are the basic building block of a <a href=\"https:\/\/www.sololearn.com\/blog\/style-react-app\/\" data-type=\"post\" data-id=\"1587\">React application.<\/a> In JavaScript, you write functions you can reuse over and over again and import into another code. That\u2019s what components do in React. Components in Reactjs is an independent and reusable pieces of code. So, components can exist alone and can be brought in into another component.<\/p>\n\n\n\n<p>In React, you can do the same thing in a lot of ways. So, to write components, you can do it in at least two ways \u2013 you can write it in form of a <a href=\"https:\/\/www.sololearn.com\/blog\/javascript-function\/\" data-type=\"post\" data-id=\"1763\">JavaScript function <\/a>or class. In the next two sections of this article, we&#8217;ll look at functional and class-based components.\u00a0<\/p>\n\n\n\n<p>A React component in can be stateless or statefull. A stateless component is a component that has no <em>state<\/em> and a statefull component is a component that has one or more states. In the next section, I will show you what stateless and statefull components are.<\/p>\n\n\n\n<p>If you are wondering what <em>state<\/em> is in React, take a look at it as React\u2019s way of writing variables.&nbsp; By definition, it is an object that stores data or information in a React component.&nbsp;<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Stateless vs statefull components&nbsp;<\/h2>\n\n\n\n<p>The main difference between stateless and statefull components is that one has a state and the other doesn\u2019t.&nbsp;<\/p>\n\n\n\n<p>A stateless component in Reactjs is a component that has no state. A stateless component is also called a <strong>dumb component<\/strong>. This means it\u2019s not keeping track of data or information.&nbsp;<\/p>\n\n\n\n<p>The code below represents a stateless component:&nbsp;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">export default function App() {\n\treturn ( &lt;\n\t\tdiv className = \"App\" >\n\t\t&lt;\n\t\th1 > Hello Sololearners &lt; \/h1> &lt;\n\t\th2 > Welcome to &lt; a href = \"sololearn.com\" > Sololearn &lt; \/a>&lt;\/h2 >\n\t\t&lt;\n\t\t\/div>\n\t);\n}<\/pre>\n\n\n\n<p>On the other hand, a statefull component is a component that has one or more states. This means it\u2019s keeping track of data or information. It is also called a <strong>smart component<\/strong>.<\/p>\n\n\n\n<p>To show you how statefull component looks in code, I have prepared the code below:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">import {\n\tuseState\n} from \"react\";\n\nexport default function App() {\n\n\tconst [name, setName] = useState(\"\");\n\n\treturn ( &lt;\n\t\tdiv className = \"App\" >\n\t\t&lt;\n\t\th1 > Hello Sololearners &lt; \/h1> &lt;\n\t\th2 >\n\t\tWelcome to &lt; a href = \"sololearn.com\" > Sololearn &lt; \/a> &lt;\n\t\t\/h2>\n\n\t\t&lt;\n\t\tp > Enter your name to start coding: &lt; \/p> &lt;\n\t\tinput type = \"text\"\n\t\tvalue = {\n\t\t\tname\n\t\t}\n\t\tonChange = {\n\t\t\t(e) => setName(e.target.value)\n\t\t}\n\t\t\/> &lt;\n\t\tp > Welcome, {\n\t\t\tname\n\t\t}. &lt; \/p> &lt;\n\t\t\/div>\n\t);\n}<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Functional components&nbsp;<\/strong><\/h2>\n\n\n\n<p>A React functional component is a pure JavaScript function that returns one or more JSX elements. JSX is the way you write HTML in React, so JSX elements are also <a href=\"https:\/\/www.sololearn.com\/blog\/html-elements\/\" data-type=\"post\" data-id=\"1715\">HTML elements.<\/a><\/p>\n\n\n\n<p>A functional component is the new way of writing components in React. You can write a functional component as a JavaScript arrow function or pure function.<\/p>\n\n\n\n<p>The example below represents a basic functional component:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">const FunctionalComponent = () => {\n\treturn ( &lt;\n\t\tdiv >\n\t\t&lt;\n\t\th1 > Sololearn &lt; \/h1> &lt;\n\t\tp >\n\t\tYou can write codes in any programming language on Sololearn &lt;\n\t\t\/p> &lt;\n\t\t\/div>\n\t);\n};\n\nexport default FunctionalComponent;<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Class components&nbsp;<\/strong><\/h2>\n\n\n\n<p>As the name says, a React class component is a JavaScript class. To make sure that the class inherits everything from React, it has to extend React. To return JSX in a functional component, you use the <em>render<\/em> method.<\/p>\n\n\n\n<p>To understand class-based components better, you should checkout this code:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">import React from \"react\";\n\nclass ClassComponent extends React.Component {\n\trender() {\n\t\treturn ( &lt;\n\t\t\tdiv >\n\t\t\t&lt;\n\t\t\th1 > Sololearn &lt; \/h1> &lt;\n\t\t\tp > This is a class component &lt; \/p> &lt;\n\t\t\tp >\n\t\t\tYou can write codes in any programming language on Sololearn &lt;\n\t\t\t\/p> &lt;\n\t\t\t\/div>\n\t\t);\n\t}\n}\nexport default ClassComponent;<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Rendering components&nbsp;<\/strong><\/h2>\n\n\n\n<p>To make sure the components you have written show in the UI, you have to render them. And to render a component, you pass them into another component or the app component as a self-closing tag. That is, a tag that has no closing tag.<\/p>\n\n\n\n<p>For example, I named the functional component as <strong>FunctionalComponent.jsx<\/strong> and the class-based component as <strong>ClassComponent.jsx<\/strong>. To render them in the app component I need to import them and pass them in as self-closing tags this way:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;FunctionalComponent \/>\n&lt;ClassComponent \/><\/pre>\n\n\n\n<p>The full code looks like this:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">import {\n\tuseState\n} from \"react\";\nimport ClassComponent from \"..\/ClassComponent\";\nimport FunctionalComponent from \"..\/FuncionalComponent\";\n\nexport default function App() {\n\tconst [name, setName] = useState(\"\");\n\n\treturn ( &lt;\n\t\tdiv className = \"App\" >\n\t\t&lt;\n\t\th1 > Hello Sololearners &lt; \/h1>\n\n\t\t&lt;\n\t\th2 >\n\t\tWelcome to &lt; a href = \"sololearn.com\" > Sololearn &lt; \/a> &lt;\n\t\t\/h2>\n\n\t\t&lt;\n\t\tp > Enter your name to start coding: &lt; \/p> &lt;\n\t\tinput type = \"text\"\n\t\tvalue = {\n\t\t\tname\n\t\t}\n\t\tonChange = {\n\t\t\t(e) => setName(e.target.value)\n\t\t}\n\t\t\/> &lt;\n\t\tp > Welcome, {\n\t\t\tname\n\t\t}. &lt; \/p>\n\n\t\t&lt;\n\t\tFunctionalComponent \/ >\n\t\t&lt;\n\t\tClassComponent \/ >\n\t\t&lt;\n\t\t\/div>\n\t);\n}<\/pre>\n\n\n\n<p>And this is what you get in the browser if you run the code:<\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"410\" height=\"371\" src=\"https:\/\/blog-dev.sololearn.com\/wp-content\/uploads\/2022\/11\/example-react-output.png\" alt=\"\" class=\"wp-image-1721\" srcset=\"https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/example-react-output.png 410w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/example-react-output-300x271.png 300w\" sizes=\"(max-width: 410px) 100vw, 410px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Components in components&nbsp;<\/strong><\/h2>\n\n\n\n<p>It is possible to have another component right inside another component in React. That\u2019s what React developers call <strong>component in component<\/strong>.<\/p>\n\n\n\n<p>Look in the code below to see an example of a component in component:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">const FunctionalComponent = () => {\n\t\/\/ Greet component inside another component\n\tfunction Greet() {\n\t\treturn &lt; p > Hi there, how are you today ? &lt; \/p>;\n\t}\n\treturn ( &lt;\n\t\tdiv >\n\t\t\/\/ rendering the greet component\n\t\t&lt;\n\t\tGreet \/ >\n\n\t\t&lt;\n\t\th1 > Sololearn &lt; \/h1> &lt;\n\t\tp > This is a functional component &lt; \/p> &lt;\n\t\tp >\n\t\tYou can write codes in any programming language on Sololearn &lt;\n\t\t\/p> &lt;\n\t\t\/div>\n\t);\n};\nexport default FunctionalComponent;<\/pre>\n\n\n\n<p>In the code above:&nbsp;<\/p>\n\n\n\n<ul>\n<li>the FunctionalComponent component is the main component&nbsp;<\/li>\n\n\n\n<li>the Greet component is the &#8220;component in component&#8221;.<\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Components in File<\/strong><\/h2>\n\n\n\n<p>Components in file is the standard and the accepted way of creating components in ReactJS. This means you create a JavaScript or JSX file and you write your component in it.&nbsp;<\/p>\n\n\n\n<p>In React, you should have one component per file. So, it is not a good practice to have a component in component. What you should do instead is to put your components in their respective files.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Conclusion<\/strong><\/h2>\n\n\n\n<p>This article showed you everything you need to get started with components in Reactjs.<\/p>\n\n\n\n<p>We looked at stateless and statefull components. Next, we took another look at the two ways you can write a component with functional and class-based components in ReactJS.<\/p>\n\n\n\n<p>If you want to learn more about components in ReactJS and React in general, we have a beginner-centered <a href=\"http:\/\/www.sololearn.com\/learn\/courses\/react-introduction\">React course<\/a> on our learning platform.<\/p>\n\n\n\n<p>Thank you for reading.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>A component is to Reactjs what battery is to a laptop. React is all about components. So, if you want to learn React in the nearest future, be aware that you\u2019ll be writing a lot of components. And if you are already making web applications with React, then you are writing a lot of components. <a href=\"https:\/\/www.sololearn.com\/blog\/react-components\/\" class=\"more-link\">&#8230;<span class=\"screen-reader-text\">  React components: what are they, what are they for, and how to use them?<\/span><\/a><\/p>\n","protected":false},"author":7,"featured_media":2094,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[35,33],"tags":[],"_links":{"self":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1720"}],"collection":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/users\/7"}],"replies":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/comments?post=1720"}],"version-history":[{"count":3,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1720\/revisions"}],"predecessor-version":[{"id":2487,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1720\/revisions\/2487"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media\/2094"}],"wp:attachment":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media?parent=1720"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/categories?post=1720"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/tags?post=1720"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}