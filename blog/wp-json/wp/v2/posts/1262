{"id":1262,"date":"2022-11-03T09:12:05","date_gmt":"2022-11-03T09:12:05","guid":{"rendered":"https:\/\/blog-dev.sololearn.com\/2022\/11\/03\/cheat-sheet-how-to-add-css-to-html\/"},"modified":"2023-03-07T15:06:06","modified_gmt":"2023-03-07T15:06:06","slug":"add-css-to-html","status":"publish","type":"post","link":"https:\/\/www.sololearn.com\/blog\/add-css-to-html\/","title":{"rendered":"How To Add CSS To HTML"},"content":{"rendered":"<p><span style=\"font-weight: 400;\">Are you an aspiring frontend developer? Then you <\/span><i><span style=\"font-weight: 400;\">need<\/span><\/i><span style=\"font-weight: 400;\"><a href=\"https:\/\/www.sololearn.com\/blog\/html-css-marketing\/\"> HTML and CSS<\/a>. They are the languages that make websites work.<\/span><\/p>\n<p><a href=\"https:\/\/html.com\/\" target=\"_blank\" rel=\"noopener\"><span style=\"font-weight: 400;\">HTML<\/span><\/a><span style=\"font-weight: 400;\"> defines the structure of a website and CSS adds the fun element. With the help of HTML and<\/span><a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\" target=\"_blank\" rel=\"noopener\"> <span style=\"font-weight: 400;\">CSS<\/span><\/a><span style=\"font-weight: 400;\">, you can make a static page colorful and more engaging.\u00a0<\/span><\/p>\n<p><span style=\"font-weight: 400;\">That\u2019s why, here, we will be discussing how to <\/span><b>link CSS to HTML.<\/b><\/p>\n<p><span style=\"font-weight: 400;\">First things first, you\u2019ve to learn HTML to learn <a href=\"https:\/\/www.sololearn.com\/blog\/difference-between-front-end-back-end-programming\/\">frontend development<\/a>. HTML lets you define the way you want to structure your website. It defines the initial document to show content on. But, with HTML only, you\u2019ll likely end up with a colorless black and white site. What you\u2019ll be seeing is some content along with links and headings. Now, what do you need to make content more readable and interesting?<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Well, to make the site interesting to the end user and nicely show content, you need CSS. You can <\/span><b>link CSS to HTM<\/b><span style=\"font-weight: 400;\">L to use both on your website. By using CSS, you can actually do a lot more than adding simple <\/span><b>HTML inline styles<\/b><span style=\"font-weight: 400;\">. With CSS, you can add transitions and animations, and enhance user experience. All that leads to more users on your website contributing to achieving the website\u2019s goal.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Let\u2019s discuss what CSS is and how to <\/span><b>link CSS to your HTML<\/b><span style=\"font-weight: 400;\">.<\/span><\/p>\n<h2><b>What is CSS?<\/b><\/h2>\n<p><span style=\"font-weight: 400;\"><a href=\"https:\/\/www.sololearn.com\/blog\/what-is-css-used-for\/\">CSS stands for Cascading Style Sheets<\/a>. It is a style sheet language for HTML pages. CSS is an invaluable tool for adding style to a web page designed with HTML. You can format information in a way that\u2019s clearer for users to grasp.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">CSS allows you to apply <\/span><b>HTML inline styles<\/b><span style=\"font-weight: 400;\"> to specific elements. You can control how and where to display HTML elements. With CSS, you can control the text size, color, font, and spacing between elements. You can also set the layout, hierarchy, or position of elements. Also, you can have some fun with background images or background colors too.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">Not only that, with CSS media queries, you can set different styles for different screen sizes. You can change the text size as per screen size, edit font, and do much more! Basically, with CSS you can apply styles to different devices and screens. It allows you to transform a static<a href=\"https:\/\/www.sololearn.com\/blog\/responsive-web-design\/\">What Is Responsive Web Design?<\/a> HTML page into an interactive site that wows users.<\/span><\/p>\n<h2><b>How to Add CSS to HTML?<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">Now that you\u2019ve learned what CSS is, the next step is to learn to add CSS to HTML. One good thing about the computer world is that there are many ways to achieve the same thing. The same goes in this case, you can <\/span><b>link CSS to HTML<\/b><span style=\"font-weight: 400;\"> in three ways. These three ways are:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Inline CSS<\/span><span style=\"font-weight: 400;\">\u00a0\u00a0<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Embedded\/Internal\u00a0<\/span><\/li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">CSS<\/span><span style=\"font-weight: 400;\">\u00a0 <\/span><span style=\"font-weight: 400;\">External CSS\u00a0<\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">Let\u2019s go through each way and understand how to make it practically work.<\/span><\/p>\n<h2><b>Inline CSS<\/b><\/h2>\n<p><span style=\"font-weight: 400;\">The simplest way of adding CSS is using <\/span><b>inline CSS<\/b><span style=\"font-weight: 400;\">. As the name suggests, you add CSS to the HTML element. By using <\/span><b>inline CSS<\/b><span style=\"font-weight: 400;\">, you can add styling to specific elements, and have more control over them.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">For <\/span><b>CSS inline styling<\/b><span style=\"font-weight: 400;\">, add the style attribute to the relevant element.<\/span><\/p>\n<h3><b>Example<\/b><\/h3>\n<p><span style=\"font-weight: 400;\">Here is an example of creating a paragraph with a black background and white text. It also has a heading in which we have changed the font size, family, and color.<\/span><\/p>\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;h2 style= \"color:blue; font-size:30px; font-family: 'Segoe UI'; text-align: center;\" > Inline Styling - Heading &lt;\/h2>\n        &lt;p style=\"color:white; background-color:black; font-family: 'Segoe UI'; text-align: center;\">\n            This is an example paragraph with CSS inline styling.\n         &lt;\/p><\/pre>\n\n\n\n<p><strong>Result:<\/strong><\/p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/blog-dev.sololearn.com\/wp-content\/uploads\/2022\/11\/css_styling-2.png\" alt=\"\" class=\"wp-image-1596\" width=\"650\" height=\"171\" srcset=\"https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/css_styling-2.png 823w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/css_styling-2-300x79.png 300w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/css_styling-2-768x202.png 768w\" sizes=\"(max-width: 650px) 100vw, 650px\" \/><\/figure>\n\n\n\n<p>Do you see how we are repeating some CSS, like font-family?<\/p>\n\n\n\n<p><strong>CSS inline styling<\/strong> is not the best way to add styles to elements. For example, in a website page that needs the same style for all headings or content, you\u2019ll have to add it to each element. In such situations, using Internal or external CSS is a better approach.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Internal CSS<\/strong><\/h2>\n\n\n\n<p>Internal CSS refers to adding CSS inside the head section of the HTML page. It is a better approach to adding styles to an HTML page. You can open the &lt;style> tag, refer to the elements, and close the tag &lt;\/style> in the head of HTML.<\/p>\n\n\n\n<p>In the case of Internal and External CSS, you can have more control over elements. You can use CSS classes and ids to define styles and apply them to elements. A CSS class starts with \u201c.\u201d in CSS styles and can be applied to many elements. It is a unified way of creating a certain style. Later, we can add that in the \u201cclass\u201d attribute of the <a href=\"https:\/\/www.sololearn.com\/blog\/html-elements\/\" data-type=\"post\" data-id=\"1715\">HTML element.<\/a> But, the id starts with \u201c#\u201d and should refer to a single element only.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><strong>Example:<\/strong><\/h3>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;html>\n  &lt;head>\n    &lt;title>Sololearn - Internal CSS&lt;\/title>\n    &lt;style>\n      body {\n        font-family: 'Segoe UI';\n        text-align: center;\n      }\n\n      p {\n        color: white;\n        background-color: gray;\n      }\n\n      .info {\n        color: black;\n        background-color: yellow;\n        padding: 15px;\n        border-radius: 3px;\n        font-weight: bold;\n      }\n\n      #main {\n        Font-size: 30px;\n        Color: darkblue;\n      }\n    &lt;\/style>\n  &lt;\/head>\n  &lt;body>\n    &lt;h1 id=\"main\"> Heading One - Main ID applied&lt;\/h1>\n    &lt;p>This is an example of internal CSS.&lt;\/p>\n    &lt;p class=\"info\">This is the second paragraph with class info!&lt;\/p>\n  &lt;\/body>\n&lt;\/html>\n<\/pre>\n\n\n\n<h4 class=\"wp-block-heading\"><strong>Result:<\/strong><\/h4>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"573\" height=\"175\" src=\"https:\/\/blog-dev.sololearn.com\/wp-content\/uploads\/2022\/11\/internal_css-2.png\" alt=\"\" class=\"wp-image-1597\" srcset=\"https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/internal_css-2.png 573w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/internal_css-2-300x92.png 300w\" sizes=\"(max-width: 573px) 100vw, 573px\" \/><\/figure>\n\n\n\n<p>As you can see in this example, we do not have to repeat the same CSS many times. Also, we can do a lot of cool stuff and set a theme for the whole page! We can simply use the body tag (where all the content goes) and define the styles there.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>External CSS<\/strong><\/h2>\n\n\n\n<p>External CSS refers to defining CSS externally (outside the HTML page) and linking back to it. You can define all stylings rules in a text file, which is saved with the .css extension. This separate CSS file is then added to the HTML using the &lt;link&gt; tag. The &lt;link&gt; (link) tag goes inside the head section.<\/p>\n\n\n\n<p>Internal CSS is a good way of defining styles if we want to add that to a single page only. But consider the scenario in which you\u2019ve to make many pages with the same style? In fact, all modern websites use a single theme and approach across the whole website. That\u2019s where external CSS can help. It is the preferred way of adding CSS as it makes code concise and gives more control.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><strong>Example:<\/strong><\/h3>\n\n\n\n<p><strong>HTML:<\/strong><\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;html>\n  &lt;head>\n    &lt;title>Sololearn - External CSS&lt;\/title>\n    &lt;link rel=\"stylesheet\" href=\"SololearnCSS.css\">\n  &lt;\/head>\n  &lt;body>\n    &lt;h1 id=\"main\"> Heading One - Main ID applied&lt;\/h1>\n    &lt;p>This is an example of internal CSS.&lt;\/p>\n    &lt;p class=\"info\">This is the second paragraph with class info!&lt;\/p>\n  &lt;\/body>\n&lt;\/html>\n <\/pre>\n\n\n\n<p><strong>CSS<\/strong>:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\"> \nbody{\n    font-family: Arial, Helvetica, sans-serif;\n    text-align: center;\n}\np {\ncolor:rgb(41, 41, 41);\nbackground-color:lightgray;\npadding: 15px;\n}\n.info\n{\ncolor:rgb(187, 10, 10);\nbackground-color: yellow;\npadding:25px;\nborder-radius: 5px;\nfont-weight: bold;\nfont-size: 20px;\n}\n#main\n{\nFont-size:30px;\nColor:darkblue;\n<\/pre>\n\n\n\n<h4 class=\"wp-block-heading\"><strong>Result:<\/strong><\/h4>\n\n\n\n<figure class=\"wp-block-image size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"573\" height=\"175\" src=\"https:\/\/blog-dev.sololearn.com\/wp-content\/uploads\/2022\/11\/main_id_applied-2.png\" alt=\"\" class=\"wp-image-1598\" srcset=\"https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/main_id_applied-2.png 573w, https:\/\/www.sololearn.com\/wp-content\/uploads\/2022\/11\/main_id_applied-2-300x92.png 300w\" sizes=\"(max-width: 573px) 100vw, 573px\" \/><\/figure>\n\n\n\n<p>In this example, we\u2019ve kept the same content, but CSS is in a separate file. We\u2019ve also done some styling changes to separate it from the previous examples.<\/p>\n\n\n\n<p>While each way of using CSS has its own benefits, in the real world, a combination of all three is used. External CSS is the most preferred way of adding CSS to HTML pages. Next, you can use Internal CSS where only a single page needs some changes, not the whole theme.<\/p>\n\n\n\n<p>You can use <strong>CSS inline styling <\/strong>when there is a minor change in a single element. Yet, it is better to avoid using <strong>inline CSS<\/strong> as it is hard to control styling through it. Each time there is a change, you need to find that element and change that style. On the other hand, with internal and external CSS, you can define the id of that element and simply change styles.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>What\u2019s Next?<\/strong><\/h2>\n\n\n\n<p>Now that you know the key steps to follow, take your newfound skills to the <a href=\"https:\/\/www.sololearn.com\/compiler-playground\/web\">coding playground at Sololearn.<\/a> Try them out on real-world coding challenges and projects with Sololearn. You can start by copying the examples above and adding your own styles to them.<\/p>\n\n\n\n<p>Or, if you want to know more, try our<a href=\"https:\/\/www.sololearn.com\/learn\/courses\/css-introduction\"> CSS<\/a> or<a href=\"https:\/\/www.sololearn.com\/learn\/courses\/html-introduction\"> HTML<\/a> Fundamentals courses to learn the fundamentals in detail. Also, you can complete quizzes and continue to build your programming skill set. Apply these skills later to a demo project, and you\u2019ll be on your way to becoming an expert frontend developer!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Are you an aspiring frontend developer? Then you need HTML and CSS. They are the languages that make websites work. HTML defines the structure of a website and CSS adds the fun element. With the help of HTML and CSS, you can make a static page colorful and more engaging.\u00a0 That\u2019s why, here, we will <a href=\"https:\/\/www.sololearn.com\/blog\/add-css-to-html\/\" class=\"more-link\">&#8230;<span class=\"screen-reader-text\">  How To Add CSS To HTML<\/span><\/a><\/p>\n","protected":false},"author":3,"featured_media":2112,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[33],"tags":[19,40,39],"_links":{"self":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1262"}],"collection":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/comments?post=1262"}],"version-history":[{"count":4,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1262\/revisions"}],"predecessor-version":[{"id":2491,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1262\/revisions\/2491"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media\/2112"}],"wp:attachment":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media?parent=1262"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/categories?post=1262"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/tags?post=1262"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}