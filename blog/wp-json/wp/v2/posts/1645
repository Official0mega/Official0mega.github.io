{"id":1645,"date":"2022-11-16T20:41:19","date_gmt":"2022-11-16T20:41:19","guid":{"rendered":"https:\/\/blog-dev.sololearn.com\/?p=1645"},"modified":"2023-03-04T02:26:37","modified_gmt":"2023-03-04T02:26:37","slug":"python-float","status":"publish","type":"post","link":"https:\/\/www.sololearn.com\/blog\/python-float\/","title":{"rendered":"Floating numbers in Python"},"content":{"rendered":"\n<p>Data has different types, it can be stored in. The main types are numbers, strings, list, tuples, set and dictionaries. In this article, we will focus on floating numbers, one of the form numbers that can be stored.<\/p>\n\n\n\n<p>Floating numbers have numbers with a whole part and a fractional part separated by a decimal point(.) These numbers are not integers.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">wholepart.fractionalpart<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\">How to obtain floating numbers<\/h2>\n\n\n\n<h3 class=\"wp-block-heading\">By storing a number with a decimal point in a variable and printing it out.<\/h3>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_number = 13.45\nprint(float_number)  # >> 13.45<\/pre>\n\n\n\n<p>We can also check the type the variable belongs to using the type notation \u201ctype()\u201d.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_number = 13.45\nprint(type(float_number))  # >> &lt;class 'float'><\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">By dividing integers<\/h3>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">maths_score = 12\nscience_score = 20\nenglish_score = 30\nmean_score = maths_score + science_score + english_score \/ 3\nprint(mean_score)  # >>\u00a0 42.0\nprint(type(mean_score))  # >>\u00a0 &lt;class 'float'><\/pre>\n\n\n\n<p>We can see in the code block above that the output is &lt;42.0&gt;, the whole part is 42 and the fractional part is 0.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">By using the inbuilt float() method<\/h3>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_num = float()\nprint(float_num)  # >> 0.0\nprint(type(float_num))  # >> &lt;class 'float'><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\">Converting other data types to Float Using the inbuilt method float().<\/h2>\n\n\n\n<p>Data types like integers, strings and boolean can be converted to floats.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Example I &#8211; with integers<\/h3>\n\n\n\n<p>Integers are whole numbers, examples; 13, 40, 15, 60&nbsp;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">integer_number = 13to_float_num = float(integer_number)print(\"This is a floating number\" , to_float_num) # >> 13.0<\/pre>\n\n\n\n<p>In the above code block, the result is \u201c13.0\u201d, &lt;13&gt; is the whole part, &lt;0&gt; is the fractional part, and it is separated by a decimal point&lt;.&gt;. Let\u2019s check the types of the variables<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">integer_number = 13\nto_float_num = float(integer_number)\nprint(\"Type for the variable - integer_number: \")\nprint(type(integer_number))\n# >> Type for the variable - integer_number:\n# >> &lt;class 'int'>\nprint(\"Type for the variable - to_float_num: \")\nprint(type(to_float_num))\n# >> Type for the variable - to_float_num:\n# >> &lt;class 'float'><\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Example II &#8211; with strings<\/h3>\n\n\n\n<p>Strings that contain numbers (\u201c40\u201d, \u201c40.345\u201d)&nbsp; and strings that contain some characters like: \u201cinfinity\u201d, \u201cinf\u201d, \u201cNan\u201d and \u201cnan\u201d are converted to floats apart from these examples of strings, the rest throw an error message.<\/p>\n\n\n\n<ul>\n<li>Strings with numbers<\/li>\n<\/ul>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">string_num = \"30\"\nto_float = float(string_num)\nprint(to_float)  # >> 30.0\nprint(type(to_float))  # &lt;class 'float'>\n\nstring_num1 = \"50.555555\"\nto_float1 = float(string_num1)\nprint(to_float1)  # >> 50.555555\nprint(type(to_float1))  # &lt;class 'float'><\/pre>\n\n\n\n<ul>\n<li>Strings with characters; \u201cinfinity\u201d,\u201dinf\u201d and \u201cnan\u201d<\/li>\n<\/ul>\n\n\n\n<p>When the characters \u201cinfinity\u201d or \u201cinf\u201d no matter the case of the letters(lower or upper), the output is &lt;inf&gt;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">string_text = \"infinity\"\nstring_text_alt = \"inf\"\nto_float = float(string_text)\nto_float_alt = float(string_text_alt)\nprint(to_float)  # >> inf\nprint(to_float_alt)  # >> inf\nprint(type(to_float))  # &lt;class 'float'>\nprint(type(to_float_alt))  # &lt;class 'float'><\/pre>\n\n\n\n<p>When the characters \u201cNAN\u201d or \u201cnan\u201d no matter the case of the letters(lower or upper), the output is &lt;nan&gt;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">string_text1 = \"nan\"\nstring_text_alt1 = \"NAN\"\nto_float1 = float(string_text1)\nto_float_alt1 = float(string_text_alt1)\nprint(to_float1)  # >> nan\nprint(to_float_alt1)  # >> nan\nprint(type(to_float1))  # &lt;class 'float'>\nprint(type(to_float_alt1))  # &lt;class 'float'><\/pre>\n\n\n\n<p>Other strings with non-numeric characters&nbsp; would not be converted to float<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">string_text = \"Float number\"\nto_float = float(string_text)\nprint(to_float)  # >> could not convert string to float: 'Float number'<\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Example III &#8211; with booleans<\/h3>\n\n\n\n<p>Booleans have two statement: &lt;True&gt; or &lt;False&gt;. &lt;True&gt; when converted to float the output is &lt;1.0&gt; while &lt;False&gt; becomes &lt;0.0&gt;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">bool_true = True\nbool_false = False\nto_float = float(bool_true)\nto_float1 = float(bool_false)\nprint(to_float)  # >> 1.0\nprint(to_float1)  # >> 0.0\nprint(type(to_float))  # &lt;class 'float'>\nprint(type(to_float1))  # &lt;class 'float'><\/pre>\n\n\n\n<p>Note: \u201cTrue\u201d is not the same as &lt;True&gt; the first is a string and it will throw and error, same as \u201cFalse\u201d and &lt;False&gt;<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Example IV &#8211; from the input() method<\/h3>\n\n\n\n<p>This method is a substitute for numbers , infinity and nan in strings, any other from these strings will throw an error.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_value = float(input(\"Enter a number or infinity or nan to convert to float: \"))\nprint(float_value)  # >> 30.908\nprint(type(float_value))  # >> &lt;class 'float'><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Arithmetic Operations<\/strong><\/h2>\n\n\n\n<p>Floating numbers can perform all four main operations; addition, subtraction, multiplication and division.<\/p>\n\n\n\n<ul>\n<li>Addition<\/li>\n<\/ul>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_num_1 = 20.34\nfloat_num_2 = 2.0\nadd_float = float_num_1 + float_num_2\nprint(add_float)  # >> 22.34<\/pre>\n\n\n\n<ul>\n<li>Subtraction<\/li>\n<\/ul>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_num_1 = 20.34\nfloat_num_2 = 2.0\nsub_float = float_num_1 - float_num_2\nprint(sub_float)  # >> 18.34<\/pre>\n\n\n\n<ul>\n<li>Multiplication<\/li>\n<\/ul>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_num_1 = 20.34\nfloat_num_2 = 2.0\nmultiply_float = float_num_1 * float_num_2\nprint(multiply_float)  # >> 40.68<\/pre>\n\n\n\n<ul>\n<li>Division<\/li>\n<\/ul>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">float_num_1 = 20.34\nfloat_num_2 = 2.0\ndivide_float = float_num_1 \/ float_num_2\nprint(divide_float)  # >> 10.17<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Conclusion<\/strong><\/h2>\n\n\n\n<p>Floating numbers are an integral part of real-world computation. In finance for money, in engineering for precision control, and in various fields for different purposes. Therefore, It is important to understand how they work and how they can be used. To know more about floats in the <a href=\"https:\/\/www.sololearn.com\/learn\/languages\/python\">python programming language<\/a>, check here.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Data has different types, it can be stored in. The main types are numbers, strings, list, tuples, set and dictionaries. In this article, we will focus on floating numbers, one of the form numbers that can be stored. Floating numbers have numbers with a whole part and a fractional part separated by a decimal point(.) <a href=\"https:\/\/www.sololearn.com\/blog\/python-float\/\" class=\"more-link\">&#8230;<span class=\"screen-reader-text\">  Floating numbers in Python<\/span><\/a><\/p>\n","protected":false},"author":7,"featured_media":2103,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[35],"tags":[75,34],"_links":{"self":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1645"}],"collection":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/users\/7"}],"replies":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/comments?post=1645"}],"version-history":[{"count":5,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1645\/revisions"}],"predecessor-version":[{"id":2470,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1645\/revisions\/2470"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media\/2103"}],"wp:attachment":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media?parent=1645"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/categories?post=1645"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/tags?post=1645"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}