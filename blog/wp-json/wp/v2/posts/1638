{"id":1638,"date":"2022-11-16T20:29:48","date_gmt":"2022-11-16T20:29:48","guid":{"rendered":"https:\/\/blog-dev.sololearn.com\/?p=1638"},"modified":"2023-03-04T01:42:35","modified_gmt":"2023-03-04T01:42:35","slug":"sql-injection","status":"publish","type":"post","link":"https:\/\/www.sololearn.com\/blog\/sql-injection\/","title":{"rendered":"What is an SQL injection?"},"content":{"rendered":"\n<p>All you need to know about this common hacking technique, and how to prevent it<\/p>\n\n\n\n<p>If you are considering creating a website or an application, it\u2019s important to know the potential threats you may encounter. Knowing these vulnerabilities beforehand will help you identify and prevent them.<\/p>\n\n\n\n<p>One of the most common hacking techniques is SQL injection. This technique allows a hacker to attack or manipulate databases by inserting malicious SQL instructions.&nbsp;<\/p>\n\n\n\n<p>SQL injections are a common threat for most website and application managers. Our guide walks you through this widespread threat so you can protect your own applications from it.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What is a SQL injection?<\/h2>\n\n\n\n<p><a href=\"https:\/\/www.sololearn.com\/blog\/increase-app-scalability\/\" data-type=\"post\" data-id=\"1476\">Databases <\/a>are critical elements for nearly every website and application. Databases store the information that digital applications require to work properly. For example, your username and password are stored in a database when you sign in to a website. Then, every time you log in, the application makes a query to its database to authenticate your credentials. The standard programming language to interact with databases is SQL.\u00a0\u00a0\u00a0<\/p>\n\n\n\n<p>SQL injection is a way to attack applications and manipulate the underlying databases by injecting malicious SQL statements. SQL injections allow an attacker to access data that aren\u2019t normally available for users.SQL injection is one of the most popular attacks because it is relatively easy to implement.&nbsp;<\/p>\n\n\n\n<p>Hackers may send SQL injections for several purposes, including:<\/p>\n\n\n\n<ul>\n<li>Accessing sensitive data, such as:\n<ul>\n<li>passwords,&nbsp;<\/li>\n\n\n\n<li>credit card details<\/li>\n\n\n\n<li>patents<\/li>\n<\/ul>\n<\/li>\n\n\n\n<li>Manipulating databases, such as inserting, updating, and deleting data<\/li>\n\n\n\n<li>Modifying permissions to access other functionalities of an application<\/li>\n\n\n\n<li>Shutting down a database&nbsp;<\/li>\n\n\n\n<li>Deleting a table or the complete database<\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">What is the impact of a successful SQL injection?<\/h2>\n\n\n\n<p>SQL injection attacks can have devastating effects on both the affected users and the company under attack.&nbsp;<\/p>\n\n\n\n<p><strong>Impact of SQL injection on users<\/strong><\/p>\n\n\n\n<p>Although companies are the common target of SQL injections, users can also be affected. This happens when a SQL injection results in a breach of personal data.&nbsp; SQL injection attacks can have serious consequences for people, including:&nbsp;<\/p>\n\n\n\n<ul>\n<li><strong>Loss of money.<\/strong> If attackers access financial data like credit card details, they could transfer money from a user\u2019s account.&nbsp;<\/li>\n\n\n\n<li><strong>Loss of privacy. <\/strong>If attackers access and disclose sensitive data, such as health-related data, user privacy can be compromised.<\/li>\n\n\n\n<li><strong>Identity theft:<\/strong> When a hacker controls a database, they can obtain the personal or financial information of users and use their identity to commit fraud.<\/li>\n<\/ul>\n\n\n\n<p><strong>Impact of SQL injection on companies<\/strong><\/p>\n\n\n\n<p>A SQL injection normally results in a data breach. When this happens, the affected company must be prepared to face the damage to its public image and minimize it.<\/p>\n\n\n\n<p>Below you can find some of the damages companies can suffer from an SQL injection:<\/p>\n\n\n\n<ul>\n<li><strong>Sabotage.<\/strong> Severe SQL injections can lead to attackers having full control of a company database. If critical elements of the software are damaged or destroyed, the company may not be able to continue its operations.&nbsp;<\/li>\n\n\n\n<li><strong>Data theft. <\/strong>Many SQL injections are aimed at stealing sensitive data, such as trade:\n<ul>\n<li>secrets,&nbsp;<\/li>\n\n\n\n<li>privileged information<\/li>\n\n\n\n<li>protected intellectual property<\/li>\n\n\n\n<li>user information<\/li>\n<\/ul>\n<\/li>\n\n\n\n<li><strong>Loss of reputation.<\/strong> After suffering the effects of an SQL injection, it can be difficult for a company to regain the trust of its customers and the general public.<\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">An example of SQL injection<\/h2>\n\n\n\n<p>Consider a website that displays coding courses. To display all the courses on web development, the course category is passed as the GET parameter in the URL:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">https:\/\/www.sololearn.com\/course?category=web_development<\/pre>\n\n\n\n<p>This application then creates the following SQL query to get the data of the requested course category from the database:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"sql\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">SELECT \n  * \nFROM \n  Courses \nWHERE \n  category = 'web_development' \n  AND published = 1 '<\/pre>\n\n\n\n<p>The restriction published = 1 is used to show only the courses that are published. Those courses that are not found have a value of 0.<\/p>\n\n\n\n<p>In this example, the application does not implement any defence. As a result, an attack can be built by modifying the URL parameter:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">https:\/\/www.sololearn.com\/course?category=web_development'--<\/pre>\n\n\n\n<p>Which would return the following query<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"sql\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">SELECT \n  * \nFROM \n  Courses \nWHERE \n  category = 'web_development' --' AND published = 1';<\/pre>\n\n\n\n<p>With the comments indicator (&#8211;), we indicate that the rest of the query is interpreted as a comment. The rest of the query won\u2019t be executed, so the application will show all the courses, both published and unpublished.<\/p>\n\n\n\n<p>If an attacker would also see all the courses irrespective of the category, he could modify the URL as follows:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">https:\/\/www.sololearn.com\/course?category=web_development'+OR+1=1--<\/pre>\n\n\n\n<p>The resulting SQL query would be:<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"sql\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">SELECT \n  * \nFROM \n  Courses \nWHERE \n  category = 'web_development' \n  OR 1 = 1 --' AND published= 1;<\/pre>\n\n\n\n<p>This is a simple example to demonstrate how the query can be manipulated to retrieve hidden data.<\/p>\n\n\n\n<p><strong>Want to learn more about SQL statements? Check out our free <\/strong><a href=\"https:\/\/www.sololearn.com\/learn\/courses\/sql-introduction\"><strong>SQL Tutorial<\/strong><\/a><strong> now!<\/strong><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">How to prevent SQL injections<\/h2>\n\n\n\n<p>There are a number of measures you can implement to prevent SQL injection attacks.<\/p>\n\n\n\n<p>First, <strong>parameterized queries<\/strong> can be used instead of embedding input values in SQL queries. Parameterized queries do not concatenate the variables to the SQL query. Rather, they use a specific syntax to pass a default set of parameters to the SQL query.&nbsp;<\/p>\n\n\n\n<p>A common way to implement parameterized queries is <strong>Object-Relational Mapping (ORM)<\/strong>. ORM is a technique that allows querying and manipulating data from a database using an object-oriented paradigm. With ORM, database tables are converted into entities to greatly simplify the programmer&#8217;s task and speed up application development.&nbsp;<\/p>\n\n\n\n<p>Another measure to prevent SQL injections is eliminating special characters. SQL injection attackers usually use special character sequences to infiltrate a database. Depending on the programming language you are using, there will be different functions available. For example, in <a href=\"https:\/\/www.sololearn.com\/learning\/1059\">PHP <\/a>it is usual to escape parameters using the mysqli_real_escape_string() function before sending the query to MySQL.<\/p>\n\n\n\n<p>You can also use a <strong>Web Application Firewall (FAW).<\/strong> A WAF helps protect web applications by filtering and monitoring HTTP traffic between an application and the Internet. By deploying a WAF in front of a web application, a shield is placed between the web system and the Internet.&nbsp;<\/p>\n\n\n\n<p>Finally, setting the <strong>correct database permissions<\/strong> is also a common way of reducing the risk of SQL injection attacks. This is achieved by limiting the permissions of the database login used by the application to only what is needed (for example, letting it only run SELECT queries on the specific database table).<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Conclusion<\/h2>\n\n\n\n<p>Now that you know the basics, are you worried that your SQL skills might not be adequate to stop an attack? Don\u2019t worry! The SoloLearn <a href=\"https:\/\/www.sololearn.com\/learn\/courses\/sql-introduction\"><strong>SQL Fundamentals<\/strong><\/a> course can help you fill any gaps in knowledge, with targeted tutorials on SQL essential elements and quizzes and challenges to test your skills before working on a live application. Give it a try!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>All you need to know about this common hacking technique, and how to prevent it If you are considering creating a website or an application, it\u2019s important to know the potential threats you may encounter. Knowing these vulnerabilities beforehand will help you identify and prevent them. One of the most common hacking techniques is SQL <a href=\"https:\/\/www.sololearn.com\/blog\/sql-injection\/\" class=\"more-link\">&#8230;<span class=\"screen-reader-text\">  What is an SQL injection?<\/span><\/a><\/p>\n","protected":false},"author":7,"featured_media":2048,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[33],"tags":[67],"_links":{"self":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1638"}],"collection":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/users\/7"}],"replies":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/comments?post=1638"}],"version-history":[{"count":3,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1638\/revisions"}],"predecessor-version":[{"id":2459,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1638\/revisions\/2459"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media\/2048"}],"wp:attachment":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media?parent=1638"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/categories?post=1638"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/tags?post=1638"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}