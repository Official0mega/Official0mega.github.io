{"id":1737,"date":"2022-11-17T12:43:28","date_gmt":"2022-11-17T12:43:28","guid":{"rendered":"https:\/\/blog-dev.sololearn.com\/?p=1737"},"modified":"2023-03-02T01:57:27","modified_gmt":"2023-03-02T01:57:27","slug":"css-absolute-fix-relative-positioning","status":"publish","type":"post","link":"https:\/\/www.sololearn.com\/blog\/css-absolute-fix-relative-positioning\/","title":{"rendered":"Absolute Vs. Fix Vs. Relative Positioning In CSS: What Are Their Differences?"},"content":{"rendered":"\n<p>Absolute, Fixed, and Relative positioning are all <a href=\"https:\/\/www.sololearn.com\/blog\/centering-in-css\/\" data-type=\"post\" data-id=\"1670\">CSS positioning properties<\/a>. But they all have different applications. Each one is useful in certain situations.<\/p>\n\n\n\n<p>It&#8217;s important to understand the best methods to position <a href=\"https:\/\/www.sololearn.com\/blog\/html-elements\/\" data-type=\"post\" data-id=\"1715\">HTML elements <\/a>on a webpage. It ensures that they are accessible and look attractive to the reader.<\/p>\n\n\n\n<p>The best positioning option for your website will come down to what you&#8217;re hoping to achieve. So, consider your options before deciding on a positioning strategy.&nbsp;&nbsp;<\/p>\n\n\n\n<p>Also, it&#8217;s vital to understand the relationships between document flow and CSS positions. It&#8217;s the first step in comprehending the impacts positioning has on how HTML elements take up available space on a webpage.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">The Position Property In CSS&nbsp;<\/h2>\n\n\n\n<p>This CSS property specifies the method of positioning elements on a webpage. The CSS uses a set value to declare the positioning property. The values are:<\/p>\n\n\n\n<ul>\n<li>Static&nbsp;<\/li>\n\n\n\n<li>Absolute&nbsp;<\/li>\n\n\n\n<li>Fix<\/li>\n\n\n\n<li>Relative&nbsp;<\/li>\n\n\n\n<li>Sticky&nbsp;<\/li>\n<\/ul>\n\n\n\n<p>Static positioning is the<strong> default method<\/strong> of positioning elements with CSS.&nbsp;<\/p>\n\n\n\n<p>The sticky positioning is a new CSS value. Sticky positioning assumes the characteristics of relative and fixed positioning depending on the scroll position. Elements with sticky positioning will be positioned relative until a specified offset position is reached in the viewport, at which it becomes fixed or sticks.&nbsp;<\/p>\n\n\n\n<p>Before using the sticky positioning be sure to confirm the browsers that support it.&nbsp;<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What Is Relative Positioning?<\/h2>\n\n\n\n<p>The <strong>relative<\/strong> positioning offsets elements according to their original position. It uses <a href=\"https:\/\/www.sololearn.com\/blog\/what-is-css-used-for\/\" data-type=\"post\" data-id=\"1672\">CSS properties<\/a> to move them around the page.\u00a0<\/p>\n\n\n\n<p>The properties are: <strong>top, bottom, left, and right<\/strong>. They can carry a positive or negative numerical value.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Top<\/h3>\n\n\n\n<p>This property offsets elements <strong>against the top<\/strong> of their original position. For example, setting its value to 50px will position them down to 50px from its original position.<\/p>\n\n\n\n<p>Let\u2019s offset Box 3 with relative positioning.<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh3.googleusercontent.com\/O86lcvMu3KgmUgnEsT5f6sKI4Z97SrGEQmh1oYI4Q08t4pSYr0ZuRossot7-N93ejX4vSiRoHdMCfH1P-cfq_Z4X158VSDtUnCKknNGQ_yOoGT0QK0Fro3KNb3ot_GGV4gkVR45b454eYkZ0sP67iFpjB52HxMlvKeOIrHDKf5w5_P6E1iWNNgFAx9Xq8w\" alt=\"\"\/><\/figure>\n\n\n\n<p>The boxes\u2019 positions before applying the code<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: relative;\n  top: 50px;\n}<\/pre>\n\n\n\n<p>Now, let\u2019s see the effect of the above code on Box 3<\/p>\n\n\n\n<p><strong><img decoding=\"async\" loading=\"lazy\" src=\"https:\/\/lh5.googleusercontent.com\/Hy9sLO6xRpuucwy_bjtM9h8yota64Ln1PhjwIbEq9VZyyOQOjM3z8sbR0F7ZiSie_-D5AwxM7I89wtCbq4lHADsngUcyHjxqnfDyG9uOmyiamw1aG9wi1eaywWL8K8cenNt1_rYcGVXvb8etKlFSxDwha31_jTVPV0cS7RQmw7NT_nRNG8nHVqWwqHuotw\" width=\"602\" height=\"321\"><\/strong><\/p>\n\n\n\n<p>The code offsets Box 3 by 50px against the top of its original position.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Bottom<\/h3>\n\n\n\n<p>This property offsets elements<strong> against the bottom<\/strong> of their original position by the value you set.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: relative;\n  bottom: \/* set the value of the offset here*\/ ;\n}<\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Left&nbsp;<\/h3>\n\n\n\n<p>This property offsets them<strong> against the left<\/strong> of their original position.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: relative;\n  left: \/* set the value of the offset here*\/ ;\n}<\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Right&nbsp;<\/h3>\n\n\n\n<p>The property offsets elements <strong>against the right<\/strong> of their original position to position them.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: relative;\n  right: \/* set the value of the offset here*\/ ;\n}<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\">What Is Absolute Positioning?<\/h2>\n\n\n\n<p>For this method, you need <strong>two elements<\/strong>, which are <strong>the parent and child elements<\/strong>. The absolute positioning method offsets elements relative to their parent elements.<\/p>\n\n\n\n<p>The absolute positioning also uses similar keywords to the relative positioning to move elements.&nbsp;<\/p>\n\n\n\n<p><strong>Note!<\/strong><\/p>\n\n\n\n<p>The position of the parent element should be set as a relative value. If not, the child element will be offset relative to the page.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Top<\/h3>\n\n\n\n<p>This property offset elements <strong>against the top of the parent elements<\/strong>.&nbsp;<\/p>\n\n\n\n<p>For example, setting the property value to 200px will position elements 200px from the top of the parent element.&nbsp;<\/p>\n\n\n\n<p>Let\u2019s offset Box 1 with absolute positioning<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh4.googleusercontent.com\/dxcKV-q9uBAfXSrH7Jxuh5uFOFFWWlyT7BQ6i8-fwWG6ngkLVE8XaWi5pr8OWE_ABhDT38Khf7JczPC_wl1cmj3wie4wxxyh1lxbVmo_pTpB2lvMIi96fiCfeuM3OKrEZSpvyPRGEXDs9656IuwSY89LmO0m8YEhATYsK-MyL64dpiv2h8Fp7O5AMajnaw\" alt=\"\"\/><\/figure>\n\n\n\n<p>The boxes\u2019 positions before applying the code<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.parent {\n  position: relative;\n}\n\n.box {\n  position: absolute;\n  top: 200px;\n}<\/pre>\n\n\n\n<p>Now, let\u2019s see the effect of the above code on Box 1<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh5.googleusercontent.com\/E3rB9QWNbfVXa2M4V2Kaga9nqBesVQ_7vILCrpcVALoaZyYpRU_J38OMQzlMnyESNQprAPJ5dvpN_5UiZxixtLzk6-OR3rY-cbYhkaWmBtKIdethkIa0_N52-nWixCUfZ0wQgNhrmN2CkoCO8vniU3bgHoHU3btfuIgSIeRVw4TJ7s4DWC1jKct0u3NDyg\" alt=\"\"\/><\/figure>\n\n\n\n<p>The code offsets Box 1 by 200px against the top of the parent element( the orange border). Box 2 and box 3 slide up due to document flow.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Bottom<\/h3>\n\n\n\n<p>This property offsets the element against the bottom of the parent element.&nbsp;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.parent {\n  position: relative;\n}\n\n.box {\n  position: absolute;\n  bottom: \/* set the value here *\/ ;\n}<\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Left&nbsp;<\/h3>\n\n\n\n<p>The left property offsets them against the left of the parent element.&nbsp;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.parent {\n  position: relative;\n}\n\n.box {\n  position: absolute;\n  left: \/* set the value here *\/ ;\n}<\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Right&nbsp;<\/h3>\n\n\n\n<p>This property offsets elements to the right of the parent elements.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.parent {\n  position: relative;\n}\n\n.box {\n  position: absolute;\n  right: \/* set the value here *\/ ;\n}<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\">What Is Fix Positioning?<\/h2>\n\n\n\n<p>The fixed positioning offsets elements <strong>according to the browser page<\/strong>. It is like absolute positioning, but the parent element is the viewport (browser page.)<\/p>\n\n\n\n<p>The keywords are the same as relative and absolute positioning.&nbsp;<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Top&nbsp;<\/h3>\n\n\n\n<p>This property offsets elements against the top of the viewport according to the specified value.&nbsp;<\/p>\n\n\n\n<p>For example, setting the property value to 200px will place them 200px from the top of the viewport.<\/p>\n\n\n\n<p>Let\u2019s offset Box 1 with fixed positioning<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh3.googleusercontent.com\/OQUZPUUolfycZUz1VUUWFdgTEz3hHQrKsEwGi5RjahSWSmMxoJx67CuNN1WzFagkWPBwV44a4Ll1HRT73O2ebeBUtGpLOyr28K8204qgjsdrX9MAurkTQ89-Hxupno6A3efKGjJM9j-Frq3UjcvUNW-VvWdSVlNe9BKTbabM54CXuWKBt1PGH5Ul3sV6YQ\" alt=\"\"\/><\/figure>\n\n\n\n<p>The boxes\u2019 positions before applying the code<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: fixed;\n  top: 200px;\n}<\/pre>\n\n\n\n<p>Now, let\u2019s see the effect of the above code on Box 1<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img decoding=\"async\" src=\"https:\/\/lh6.googleusercontent.com\/38Yl1FuZIiihPff645ZXBCn5p3VPX55a-LoStV_RkYLYGGXxmTUnCp85oxIkFXCLaQVe-MXcbscFOP5sDee_a04Ajrf_3-sYgqRHWNkEX327viUMha0OUAxG29p4VmeWXT5weioOGPc4TpklkpNLqEhqQxHOSOmHMOJYGb7Ym7xrT1JaAg4b6srbEN-fHw\" alt=\"\"\/><\/figure>\n\n\n\n<p>The code offsets Box 1 by 200px against the top of the viewport. Box 2 and box 3 slide up due to document flow.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Bottom&nbsp;<\/h3>\n\n\n\n<p>This property offsets elements against the bottom of the viewport.&nbsp;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: fixed;\n  bottom: \/* set your offset value\u00a0 here*\/ ;\n}<\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Left<\/h3>\n\n\n\n<p>This property offsets elements against the viewport left side.&nbsp;<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: fixed;\n  left: \/* set your offset value here*\/ ;\n}<\/pre>\n\n\n\n<h3 class=\"wp-block-heading\">Right<\/h3>\n\n\n\n<p>This property offsets elements against the viewport right side.<\/p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">.box {\n  position: fixed;\n  right: \/* set your offset value here*\/ ;\n}<\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Differences Between Absolute, Fixed, and Relative Positioning<\/strong><\/h2>\n\n\n\n<p>Web developers use these positioning properties to control the<strong> spatial relationship of elements<\/strong> on a page.&nbsp;<\/p>\n\n\n\n<p>But how do you decide which one to use for your projects?&nbsp;<\/p>\n\n\n\n<p>The table below shows the differences among these properties and how they can affect your web design.<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Criteria<\/strong><\/td><td><strong>Relative<\/strong><\/td><td><strong>Absolute<\/strong><\/td><td><strong>Fixed<\/strong><\/td><\/tr><tr><td><strong>Method<\/strong><\/td><td>Offsets elements against their original position.<\/td><td>Offsets elements against the nearest parent element with a position.<\/td><td>Offsets elements against the viewport.<\/td><\/tr><tr><td><strong>Elements required&nbsp;<\/strong><\/td><td>Only the box elements.<\/td><td>Parents and box elements.<\/td><td>Box elements.<\/td><\/tr><tr><td><strong>Affects document flow?<\/strong><\/td><td>No<\/td><td>Yes<\/td><td>Yes<\/td><\/tr><tr><td><strong>Reference point&nbsp;<\/strong><\/td><td>Original position.<\/td><td>Parent position.<\/td><td>Viewport.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Document Flow in CSS Positioning&nbsp;<\/strong><\/h2>\n\n\n\n<p>The CSS document flow is an algorithm that determines the order in which <a href=\"https:\/\/www.sololearn.com\/learn\/courses\/css-introduction\">CSS <\/a>boxes display in the document.\u00a0<\/p>\n\n\n\n<p>Using the CSS positioning property modifies the document flow of the elements. The effects depend on the property used.&nbsp;<\/p>\n\n\n\n<p>Depending on the display property, <a href=\"https:\/\/www.sololearn.com\/learn\/languages\/html\">HTML<\/a> elements are either in-block or in-line. The block format arranges elements vertically, and the in-line positions them horizontally.<\/p>\n\n\n\n<p>Examples of block elements are div, paragraphs, and lists. The in-line components include images, links, and inputs.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><strong>Relative Document Flow<\/strong><\/h3>\n\n\n\n<p>When relative positioning offsets an element, it doesn&#8217;t affect the document flow. It means the remaining elements will keep their position after offsetting it from its flow.<\/p>\n\n\n\n<p>That is, it keeps the document flow and leaves a blank space where the box resided.&nbsp;<\/p>\n\n\n\n<h3 class=\"wp-block-heading\"><strong>Absolute and Fixed Document Flow<\/strong><\/h3>\n\n\n\n<p>When absolute or fixed positioning offsets an element, it can change the document flow. It means the remaining elements will occupy the vacant position after offsetting it from its flow.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>Conclusion<\/strong><\/h2>\n\n\n\n<p>As a web designer\/developer, you&#8217;ll encounter the CSS position property at some point. It&#8217;s a helpful tool that allows you to specify <strong>how and where <\/strong>an element will appear on the page.&nbsp;<\/p>\n\n\n\n<p>Want to learn more about this property? Consider taking a <a href=\"https:\/\/www.sololearn.com\/learning\/1023\">CSS course<\/a> on Sololearn\u2019s website. We offer a complete CSS course and other programming languages.<\/p>\n\n\n\n<p><strong>References<\/strong><\/p>\n\n\n\n<p>What is document flow? (n.d.). Retrieved August 24, 2022, from <a href=\"https:\/\/soulandwolf.com.au\/blog\/what-is-document-flow\/\" target=\"_blank\" rel=\"noopener\">https:\/\/soulandwolf.com.au\/blog\/what-is-document-flow\/<\/a>&nbsp;<\/p>\n\n\n\n<p>Chan, J. (2020, March 23). CSS position property: Relative, absolute, static, fixed, sticky. Medium. Retrieved August 24, 2022, from <a href=\"https:\/\/levelup.gitconnected.com\/css-position-property-relative-absolute-static-fixed-sticky-79a40275ed04\" target=\"_blank\" rel=\"noopener\">https:\/\/levelup.gitconnected.com\/css-position-property-relative-absolute-static-fixed-sticky-79a40275ed04<\/a>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Absolute, Fixed, and Relative positioning are all CSS positioning properties. But they all have different applications. Each one is useful in certain situations. It&#8217;s important to understand the best methods to position HTML elements on a webpage. It ensures that they are accessible and look attractive to the reader. The best positioning option for your <a href=\"https:\/\/www.sololearn.com\/blog\/css-absolute-fix-relative-positioning\/\" class=\"more-link\">&#8230;<span class=\"screen-reader-text\">  Absolute Vs. Fix Vs. Relative Positioning In CSS: What Are Their Differences?<\/span><\/a><\/p>\n","protected":false},"author":7,"featured_media":2105,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[35,33],"tags":[],"_links":{"self":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1737"}],"collection":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/users\/7"}],"replies":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/comments?post=1737"}],"version-history":[{"count":3,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1737\/revisions"}],"predecessor-version":[{"id":2444,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/posts\/1737\/revisions\/2444"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media\/2105"}],"wp:attachment":[{"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/media?parent=1737"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/categories?post=1737"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.sololearn.com\/blog\/wp-json\/wp\/v2\/tags?post=1737"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}